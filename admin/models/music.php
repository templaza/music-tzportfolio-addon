<?php
/*------------------------------------------------------------------------

# TZ Portfolio Plus Extension

# ------------------------------------------------------------------------

# author    DuongTVTemPlaza

# copyright Copyright (C) 2020 templaza.com. All Rights Reserved.

# @license - http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL

# Websites: http://www.templaza.com

# Technical Support:  Forum - http://templaza.com/Forum

-------------------------------------------------------------------------*/

// No direct access
defined('_JEXEC') or die;

use Joomla\Filesystem\File;
use Joomla\Registry\Registry;
use TZ_Portfolio_Plus\Image\TppImageWaterMark;

jimport('joomla.filesytem.file');
JLoader::register('TZ_Portfolio_PlusFrontHelper', JPATH_SITE
    .'/components/com_tz_portfolio_plus/helpers/tz_portfolio_plus.php');

$component_path = JPATH_ADMINISTRATOR.DIRECTORY_SEPARATOR.'components';
// Import addon_data model
JLoader::import('com_tz_portfolio_plus.models.addon_data',$component_path);

JLoader::import('content.music.admin.helpers.music', COM_TZ_PORTFOLIO_PLUS_ADDON_PATH);

class TZ_Portfolio_Plus_Addon_MusicModelMusic extends TZ_Portfolio_PlusModelAddon_Data{

    protected $addon_element    = 'music';

//    protected function prepareTable($table){
//        parent::prepareTable($table);
//
//        $table -> element   = $this -> addon_element;
//
//        if(!empty($table -> extension_id) && !empty($table -> content_id)){
//            // Get addon data id
//            if($newtable = $this -> getTable()){
//                $newtable -> load(array('content_id' => $table -> content_id, 'extension_id' => $table -> extension_id));
//                $table -> set('id', $newtable -> get('id'));
//            }
//        }
//    }

    protected function loadFormData()
    {
        $data   = null;
        $_data  = parent::loadFormData();
        if(!empty($_data)){
            $data   = new stdClass();
            $data -> addon  = new stdClass();
            $data -> addon -> {$this -> addon_element}  = $_data -> value;
        }

        return $data;
    }

//    public function getForm($data = array(), $loadData = true)
//    {
//        $form   = parent::getForm($data, $loadData); // TODO: Change the autogenerated stub
//
//        var_dump($form -> getData()); die(__FILE__);
//
//        return $form;
//    }

//    public function getItem($pk = null){
//        $item   = parent::getItem($pk);
//
//        if($item){
//            var_dump($item);
//            $song  = !empty($item -> value)?json_decode($item -> value):false;
//            $item -> addon    = isset($item -> addon)?$item -> addon:(new stdClass());
//            $item -> addon -> music    = isset($item -> addon -> music)?$item -> addon -> music:(new stdClass());
//
//            $item -> addon -> music -> songs    = ($song && isset($song -> contentid))?$song -> contentid:array();
//        }
//
//        return $item;
//    }

    public function save($data)
    {
        if(empty($data) || !$data['content_id']){
            return true;
        }

        // Get song data
        $db     = JFactory::getDbo();
        $query  = $db -> getQuery(true);

        $table  = $this -> getTable();

        $addon  = TZ_Portfolio_PlusPluginHelper::getPlugin('content', 'music');
        $songs  = array();
        // Disable article assigned to song without current songs assigned
        $query -> select('*');
        $query -> from($table -> getTableName().' AS d');

        $query -> where('d.element ='.$db -> quote('song'));
        $query -> where('d.extension_id ='.$addon -> id);
        $query->where('FIND_IN_SET( ' . $data['content_id']
            . ', substring_index( substring_index( d.value, '
            . $db->quote('"contentid":"') . ', -1 ) , '
            . $db->quote('"') . ', 1 ) ) >0');

        if(!empty($data) && isset($data['value']) && isset($data['value']['songs'])) {
            $songs  = $data['value']['songs'];
            $query->where('d.id NOT IN(' . implode(',', $songs) . ')');
        }

        $db -> setQuery($query);

        if($without_songs = $db -> loadObjectList()){
            foreach($without_songs as $ws){
                $value  = isset($ws -> value) && !empty($ws -> value)?$ws -> value:false;
                $value  = !empty($value) && is_string($value)?json_decode($value):$value;
//                var_dump($value); die(__FILE__);
                if(!isset($value -> contentid) || empty($value -> contentid)){
                    continue;
                }
                $wcontent_id    = explode(',', $value -> contentid);

                $key    = array_search($data['content_id'], $wcontent_id);
                if($key !== false){
                    unset($wcontent_id[$key]);
                }

                $value -> contentid    = implode(',', $wcontent_id);

                $ws -> value    = json_encode($value);

                // Store again
                $table -> reset();
                $table -> set($table -> getKeyName(), 0);
                $table -> load($ws -> id);
                $table -> bind((array) $ws);
                $table -> store();

            }
        }

        if(isset($songs) && !empty($songs)){

            foreach($songs as $song_id){

                // Remove article id

                $song_data   = TZ_Portfolio_Plus_Addon_MusicHelper::getSongById($song_id);

                $song   = !empty($song_data -> value)?json_decode($song_data -> value):false;

                if(!$song){
                    continue;
                }

                $content_id = (isset($song -> contentid) && !empty($song -> contentid))?explode(',', $song -> contentid):array();

                if(empty($content_id) || !in_array($data['content_id'], $content_id)){
                    $content_id[]   = $data['content_id'];
                }

                if(!empty($content_id)) {
                    $song -> contentid  = implode(',', $content_id);

                    $table -> reset();
                    $table -> set($table -> getKeyName(), 0);
                    $table->load($song_id);

                    $table->bind(array('value' => json_encode($song)));

                    $table -> store();
                }
            }
        }

        return true;
    }
}